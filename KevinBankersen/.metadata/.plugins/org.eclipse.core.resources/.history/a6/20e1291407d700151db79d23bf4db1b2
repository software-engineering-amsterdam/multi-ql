package eu.bankersen.kevin.ql.ast.expr;

import eu.bankersen.kevin.ql.ast.Type;
import eu.bankersen.kevin.ql.context.Context;
import eu.bankersen.kevin.ql.context.Context2;
import eu.bankersen.kevin.ql.context.EvaluateExeption;

public abstract class Expr {
    
    protected Context2 context = Context2.getInstance(); // Refactor this out..
    
    private final Type type;
    
    public Expr(Type type) {
	this.type = type;
    }
    
    public Type getType(Context context) {
	return type;
    }

    public abstract Object eval() throws EvaluateExeption;

    public abstract Context checkType(Context context);
    
    public boolean equalExpr(Type lhs, Type rhs, Type expr) {
	return lhs.equals(rhs) && lhs.equals(expr);
    }
    public boolean equalExpr(Type lhs, Type rhs) {
	return lhs.equals(rhs);
    }

}