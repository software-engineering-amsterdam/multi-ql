package eu.bankersen.kevin.ql.ast.expr.math;

import eu.bankersen.kevin.ql.ast.expr.EvaluateExeption;
import eu.bankersen.kevin.ql.ast.expr.Expr;
import eu.bankersen.kevin.ql.ast.expr.NumberExpr;
import eu.bankersen.kevin.ql.ast.type.Type;
import eu.bankersen.kevin.ql.context.Context;
import eu.bankersen.kevin.ql.context.SymbolTable;

public class Div extends NumberExpr {

    public Div(final Expr lhs, final Expr rhs,  final int line) {
	super(lhs, rhs, line);
    }
    
    @Override
    public final Double eval(SymbolTable symbolTable) throws EvaluateExeption {
	return (Double) lhs().eval(symbolTable) / (Double) rhs().eval(symbolTable);
    }
    
    protected boolean isCompatible(Type type1, Type type2, Context context) {
	
    }

}
