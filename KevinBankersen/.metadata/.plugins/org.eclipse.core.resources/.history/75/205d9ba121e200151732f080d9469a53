package eu.bankersen.kevin.ql.symbol_table;

import eu.bankersen.kevin.ql.ast.Identifier;
import eu.bankersen.kevin.ql.ast.expr.Expr;
import eu.bankersen.kevin.ql.ast.stat.Question;
import eu.bankersen.kevin.ql.ast.type.Type;
import eu.bankersen.kevin.ql.context.Symbol;
import eu.bankersen.kevin.ql.context.SymbolTable;

public class SymbolTableBuilder implements SymbolTableBuilderInterface {

    private SymbolTable symbolTable;
    private SymbolTableBuilder builder;

    public SymbolTableBuilder() {
	symbolTable = new SymbolTable();
    }
    
    public SymbolTable getSymbolTable() {
	return symbolTable;
    }
    
    public void addSymbol(Boolean computed, String name, String question, Type type) {
	symbolTable.addSymbol(computed, name, question, type);
    }

    @Override
    public SymbolTableBuilder construct(Identifier data) {
	builder = this;
	System.out.println("Found id");
	return builder;
    }

    @Override
    public SymbolTableBuilder construct(Question data) {
	builder = this;
	System.out.println("Found Question");
	
	builder = data.expr().buildSymbolTable(builder);
	
	builder.addSymbol(data.isComputed(), data.getName(), data.getText(), data.getType());
	
	System.out.println(builder.getSymbolTable().getSymbol(data.getName()));
	
	return builder;
    }
    
    @Override
    public SymbolTableBuilder construct(Expr data) {
	System.out.println("Found expr");
	builder = this;
	if (data.lhs() != null) {
	    builder = data.lhs().buildSymbolTable(builder);
	} 
	if (data.rhs() != null) {
	    builder = data.rhs().buildSymbolTable(builder);
	}
	return builder;
    }
}
