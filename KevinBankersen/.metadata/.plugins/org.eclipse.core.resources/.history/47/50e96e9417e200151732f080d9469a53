package eu.bankersen.kevin.ql.ast.stat;

import eu.bankersen.kevin.ql.ast.Variable;
import eu.bankersen.kevin.ql.ast.type.Type;
import eu.bankersen.kevin.ql.context.Context;
import eu.bankersen.kevin.ql.context.SymbolTable;
import eu.bankersen.kevin.ql.oldcode.QLVisitor;
import eu.bankersen.kevin.ql.symbol_table.SymbolTableBuilder;

public abstract class Question extends Statement {

    private final Variable variable;
    private final Boolean computed;
    private final String text;
    private Object value;

    public Question(Boolean computed, Variable variable, String text) {
	super(true);
	this.variable = variable;
	this.text = text.substring(1, text.length() - 1);
	this.computed = computed;
    }

    public String getText() {
	return text;
    }
    
    public Variable variable() {
	return variable;
    }

    public Context checkType(Context context) {
	return variable.checkType(context, text, computed);
    }

    public Type getType() {
	return variable.getType();
    }
    
    public String getName() {
	return variable.getName();
    }
    
    public SymbolTable evalStatement(SymbolTable symbolTable) {
	return variable.eval(symbolTable);
    }
    
    @Override
    public SymbolTableBuilder buildSymbolTable(SymbolTableBuilder builder){
	return builder;
    }
}
