package eu.bankersen.kevin.ql.symboltable;

import java.util.HashMap;
import java.util.HashSet;
import java.util.Set;

import eu.bankersen.kevin.ql.ast.Type;
import eu.bankersen.kevin.ql.testing.singletonTest;

public class Context {
    
    private static HashMap<String, Symbol> symbolTable = new HashMap<>();;
    private static Set<Errors> errorList = new HashSet<>();
    
    //create an object of SingleObject
    private static Context instance = new Context();

    //make the constructor private so that this class cannot be
    //instantiated
    private Context(){}

    //Get the only object available
    public static Context getInstance(){
       return instance;
    }
    
    
    public final Symbol getSymbol(final String symbol) {
	return symbolTable.get(symbol);
    }
    
    public final Symbol addSymbol(final String symbol, Type type) {
	return symbolTable.put(symbol, new Symbol(type));
    }
    
    public final void updateSymbol(final String name, final Object value) {
	Symbol symbol = symbolTable.get(name);
	symbol.setValue(value);
	symbolTable.put(name, symbol);
    }

}