package eu.bankersen.kevin.ql.ast.stat;

import com.esotericsoftware.minlog.Log;

import eu.bankersen.kevin.ql.ast.expr.EvaluateExeption;
import eu.bankersen.kevin.ql.ast.expr.Expr;
import eu.bankersen.kevin.ql.ast.type.Type;
import eu.bankersen.kevin.ql.context.Context;
import eu.bankersen.kevin.ql.context.symboltable.SymbolTable;
import eu.bankersen.kevin.ql.context.symboltable.SymbolTableBuilder;

public class ComputedQuestion extends Question {

    public ComputedQuestion(String name, String text, Type type, Expr expr, int line) {
	super(name, text, type, expr, line);
    }
    
    @Override
    public Context checkType(Context context) {
	return context.evaluate(this);
    }
    
    @Override
    public SymbolTable evalStatement(SymbolTable symbolTable) {
	
	try {
	    Object value = expr().eval(symbolTable);
	    symbolTable.updateSymbol(name, value);
	} catch (EvaluateExeption  e) {
	    Log.debug("Cannot evaluate expression yet");
	}
	return symbolTable;
    }
    
    @Override
    public SymbolTableBuilder buildSymbolTable(SymbolTableBuilder builder) {
	return builder.construct(this);
    }
}
