package eu.bankersen.kevin.ql.typechecker;

import java.util.HashSet;
import java.util.Set;

import eu.bankersen.kevin.ql.ast.form.Form;
import eu.bankersen.kevin.ql.typechecker.analytics.CyclicAnalyzer;
import eu.bankersen.kevin.ql.typechecker.analytics.TypeAnalyzer;
import eu.bankersen.kevin.ql.typechecker.errors.ContextBuildException;
import eu.bankersen.kevin.ql.typechecker.errors.TypeCheckingError;
import eu.bankersen.kevin.ql.typechecker.symboltable.SymbolTable;
import eu.bankersen.kevin.ql.typechecker.symboltable.SymbolTableBuilder;

public class TypeChecker {
    
    private final Form form;
    private final SymbolTable symbolTable;
    private final Set<TypeCheckingError> errorList;
    private final Set<TypeCheckingError> warningList;
    
    public TypeChecker(Form form) throws ContextBuildException {
	this.errorList = new HashSet<>();
	this.form = form;
	
	SymbolTableBuilder builder = new SymbolTableBuilder(form);
	this.symbolTable = builder.getSymbolTable();
	errorList.addAll(builder.getErrors());
		
	errorList.addAll(new TypeAnalyzer(symbolTable, form).getErrors());
	errorList.addAll(new CyclicAnalyzer(form, symbolTable).getErrors());
	
	if (errorList.size() > 0) {
	    throw new ContextBuildException(errorList);
	}
    }
    
    public SymbolTable getSymbolTable() {
	return form.evalForm(symbolTable);
    }
    
    private SymbolTable convertRawSymbolTable() {
	return new SymbolTable();
    }

}
