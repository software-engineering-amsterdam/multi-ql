package eu.bankersen.kevin.ql.ast;

import eu.bankersen.kevin.ql.ast.expr.Expr;
import eu.bankersen.kevin.ql.context.EvaluateExeption;


public class Identifier extends Expr {

    private final String name;
    private final int line;

    public Identifier(String name, int line) {
	super(Type.UNDIFINED);
	this.name = name;
	this.line = line;
    }

    @Override
    public Object eval() throws EvaluateExeption {

	Object value = super.context.getSymbol(name).getValue();

	if (value != Type.EMPTY) {
	    return value;   
	} else {
	    throw new EvaluateExeption();
	} 
    }

    @Override
    public Context checkType(Context context) {
	return context;
    }

    @Override
    public Type getType() {
	if (super.context.checkID(name)) {
	    return super.context.getSymbol(name).getType();
	} else {
	    super.context.addError("SYMANTIC_ERROR @Line " + line 
		    + ": \"" + name + "\" does not exist!");
	    return getType();
	}
    }
}
