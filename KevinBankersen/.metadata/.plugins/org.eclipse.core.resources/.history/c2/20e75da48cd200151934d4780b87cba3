package eu.bankersen.kevin.ql.ast.form;

import java.util.ArrayList;
import java.util.List;

import eu.bankersen.kevin.ql.ast.stat.IFStat;

public class Block {

    private List<Question> questions;
    private List<IFStat> statements;

    public Block() {
	questions = new ArrayList<Question>();
	statements = new ArrayList<IFStat>();
    }
    
    public final void result() {
	// Need a function for questions
	
	statements.forEach(statement -> statement.result());
    }

    public final Boolean checkType() {

	List<Boolean> check = new ArrayList<Boolean>();

	questions.forEach(question -> question.checkType());
	
	statements.forEach(statement -> statement.checkType());
	
	return !check.contains(new Boolean(false));
    }

    @Override
    public final String toString() {

	StringBuilder sb;

	sb = new StringBuilder();
	for (Question q: questions) {
	    sb.append(q.getText());
	    sb.append("\t: ");
	    sb.append(q.getType());
	    sb.append(" : ");
	    sb.append(q.getValue());
	    sb.append("\n");
	}

	for (IFStat s: statements) {
	    sb.append(s.toString() + "\n");
	}


	return sb.toString();
    }

    public final void add(final Question question) {
	questions.add(question);
    }

    public final void add(final IFStat statement) {
	statements.add(statement);
    }

    public final List<Question> getQuestions() {
	return questions;
    }

    public final List<IFStat> getStatements() {
	return statements;
    }
}
