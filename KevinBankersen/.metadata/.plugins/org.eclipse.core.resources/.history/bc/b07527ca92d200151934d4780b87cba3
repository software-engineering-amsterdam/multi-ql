package eu.bankersen.kevin.ql;

import java.io.IOException;
import java.util.Arrays;

import org.antlr.v4.runtime.tree.gui.TreeViewer;

import com.esotericsoftware.minlog.Log;

import eu.bankersen.kevin.ql.ast.form.Form;
import eu.bankersen.kevin.ql.parser.FormParser;
import eu.bankersen.kevin.ql.parser.QLParser.FormContext;
import eu.bankersen.kevin.ql.symboltable.SymbolTabel;

/**
 * Hello world!
 *
 */
public class App {

    public static void main(final String[] args) {
	Log.DEBUG(); // Set log level
	Log.setLogger(new CustomLogger()); // Our custom logger.

	System.out.println("Welcome to the Questionnaire Language (QL)!\n");

	String form;
	try { // Currently the top level so here we catch exceptions.
	    form = new FileReader().read("resources/Tax.form");
	} catch (IOException e) {
	    Log.error("Unable to read file, Terminating");
	    System.exit(1);
	    form = null;
	}

	FormParser parser = new FormParser(form);

	Form parsedForm = parser.getForm();

	FormContext formContext = parser.getFormContext();

	/*
	 * This is Lame code for prototyping.
	 */

	
	// Show UI
	Log.info("Build view");
	TreeViewer viewr = new TreeViewer(Arrays.asList(parser.getParseRules()), formContext);
	viewr.setScale(1.5); // scale a little
	//viewr.open(); // Open the viewer
	
	
	// Trying to type check.
	Log.info("Type Check Start");
	Log.info("Type Check Result: " + (parsedForm.checkType() ? "Passed!" : "Failed!"));
	
	Log.debug(parsedForm.toString());
	
	System.out.println(SymbolTabel.getContents());
	
	SymbolTabel.updateValue("privateDebt", new Object(5));
	parsedForm.result();
	
	System.out.println(SymbolTabel.getContents());
	
	

    }
}
