package eu.bankersen.kevin.ql.ast.stat;

import com.esotericsoftware.minlog.Log;

import eu.bankersen.kevin.ql.ast.expr.EvaluateExeption;
import eu.bankersen.kevin.ql.ast.expr.Expr;
import eu.bankersen.kevin.ql.ast.type.Type;
import eu.bankersen.kevin.ql.context.symboltable.SymbolTable;
import eu.bankersen.kevin.ql.context.symboltable.SymbolTableBuilder;
import eu.bankersen.kevin.ql.context.typeanalyzer.Context;

public class ComputedQuestion extends AbstractQuestion {

    public ComputedQuestion(String name, String text, Type type, Expr expr, int line) {
	super(name, text, type, expr, line);
    }
    
    @Override
    public SymbolTableBuilder process(SymbolTableBuilder builder) {
	return builder.construct(this);
    }
    
    @Override
    public Context checkType(Context context) {
	return context.evaluate(this);
    }
    
    @Override
    public SymbolTable evalStatement(SymbolTable symbolTable) {
	
//	try {
//	    Object value = expr().evalExpr(symbolTable);
//	    symbolTable.updateSymbol(name(), value);
//	} catch (EvaluateExeption  e) {
//	    Log.debug("Cannot evaluate expression yet");
//	}
	
	Object value = expr().evalExpr(symbolTable);
	if (value != null) {
	   symbolTable.updateSymbol(name(), value);
	}
	return symbolTable;
    }
}
